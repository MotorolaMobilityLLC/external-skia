#!/usr/bin/env python
#
# Copyright 2015 Google Inc.
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script does a very rough simulation of BUILD file expansion,
# mostly to see the effects of glob().

# We start by adding some symbols to our namespace that BUILD.public calls.

# We don't really care about this, so just no-op it.
def exports_files(files):
  pass

# Simulates BUILD file glob().
def glob(include, exclude=()):
  from glob import glob as python_glob

  files = set()
  for pattern in include:
    files.update(python_glob(pattern))
  for pattern in exclude:
    files.difference_update(python_glob(pattern))
  return list(sorted(files))

# We've put enough into our environment now to treat BUILD.public as if it were
# Python code.  This pulls its variable definitions (SRCS, HDRS, DEFINES, etc.)
# into our local namespace.
execfile('BUILD.public')

# Pretty-print every variable whose name is COMPLETELY_UPPERCASE,
# i.e. every variable from BUILD.public.  This is obviously quite heuristic.
from pprint import pprint
with open('tools/BUILD.public.expected', 'w') as out:
  print >>out, "This file is auto-generated by tools/BUILD_simulator.py."
  print >>out, "It expands BUILD.public to make it easy to see changes."
  for name, value in sorted(locals().items()):
    if name.isupper():
      print >>out, name, '= ',
      pprint(value, out)
