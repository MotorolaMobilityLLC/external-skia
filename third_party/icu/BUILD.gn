# Copyright 2016 Google Inc.
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  skia_use_system_icu = is_official_build
  skia_icu_use_prebuilt_data = true
}

import("../../gn/skia.gni")
import("../third_party.gni")
import("icu.gni")

if (skia_use_icu) {
  if (skia_use_system_icu) {
    system("icu") {
      libs = [ "icuuc" ]
      defines = [ "U_USING_ICU_NAMESPACE=0" ]
    }
  } else {
    if (target_cpu == "wasm") {
      _data = "$target_gen_dir/icudtl_dat.cpp"
      _data_script = "make_data_assembly.py"
    } else if (is_win) {
      _data = "$target_gen_dir/icudtl_dat.obj"
      _data_script = "make_data_obj_win.py"
    } else {
      _data = "$target_gen_dir/icudtl_dat.S"
      _data_script = "make_data_assembly.py"
    }
    third_party("icu") {
      public_include_dirs = [
        "../externals/icu/icu4c/source/common",
        "../externals/icu/icu4c/source/i18n",
        ".",
      ]
      public_defines = [
        "U_USING_ICU_NAMESPACE=0",
        "U_STATIC_IMPLEMENTATION",
        "SK_USING_THIRD_PARTY_ICU",
      ]
      configs -= [ "//gn:no_rtti" ]
      deps = [
        ":assemble_data",
      ]
      sources = icu_sources
      sources += [ _data ]
      defines = [
        # http://userguide.icu-project.org/howtouseicu
        "U_ENABLE_DYLOAD=0",
        "U_NOEXCEPT=",
        "U_COMMON_IMPLEMENTATION",
        "U_I18N_IMPLEMENTATION",
      ]
      if (is_win) {
        defines += [ "U_PLATFORM_HAS_WINUWP_API=1" ]
      }
    }
    _dat_file = "$target_gen_dir/icu.dat"
    action("assemble_data") {
      script = _data_script
      sources = [
        _dat_file,
      ]
      outputs = [
        _data,
      ]
      args = [
        icu_dtname,
        current_os,
        target_cpu,
        rebase_path(_dat_file, root_build_dir),
        rebase_path(_data, root_build_dir),
      ]
      deps = [
        ":get_data",
      ]
    }
    if (skia_icu_use_prebuilt_data) {
      action("get_data") {
        script = "download_file.py"
        outputs = [
          _dat_file,
        ]
        args = [
          "https://storage.googleapis.com/$icu_dat_bucket/$icu_dat_md5",
          icu_dat_md5,
          rebase_path(_dat_file, root_build_dir),
        ]
      }
    } else {
      action("get_data") {
        script = "build_icu_data_file.py"
        outputs = [
          _dat_file,
        ]
        args = [
          rebase_path("../externals/icu", root_build_dir),
          rebase_path(_dat_file, root_build_dir),
        ]
      }
    }
  }
}
